import glob
import shutil

def valid():

    tracks = dict()
    tracks['Trackable']=(
        0, 5, 6, 11, 16, 18, 19, 23, 26, 28, 30, 32, 33, 41, 51, 67, 73, 74, 75, 82, 86, 90, 95, 101, 102, 103, 105, 106,
        107,
        108, 109, 118, 119, 121, 125, 126, 132, 133, 135, 144, 148, 155, 156, 160, 166, 167, 168, 172, 173, 175, 177, 184,
        197,
        199, 200, 205, 206, 214, 217, 221, 222, 225, 227, 230, 231, 232, 234, 238, 239, 241, 242, 244, 249, 250, 251, 252,
        254,
        261)
    tracks['Identifiable'] = (
        0, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 60, 64, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 85, 86, 87, 88, 95,
        97,
        104, 106, 107, 109, 111, 112, 115, 121, 122, 123, 124, 125, 127, 128, 138, 143, 144, 146, 150, 154, 156, 161, 174,
        175,
        176, 177, 179, 180, 188, 189, 190, 193, 206, 207, 209, 210, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 231,
        232,
        234, 240, 241, 242, 243, 252, 254, 255, 260, 261, 264, 265, 266, 269, 270, 271, 275, 276, 279, 282, 283, 284, 285,
        286,
        289, 290, 291, 293, 294, 295, 298, 300, 302, 303, 307, 310, 317, 319, 320, 322, 324, 325, 328, 329, 334, 335, 336,
        337,
        338, 339, 348, 355, 361, 364, 368, 369, 370, 372, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391,
        392,
        393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 424, 425, 427, 429, 431, 432, 436, 440,
        448,
        450, 452, 453, 461, 462, 463, 464, 465, 467, 472, 475, 482, 483, 484, 489, 493, 506, 511, 517, 519, 522, 523, 526,
        529,
        530, 532, 533, 553, 556, 560, 561, 562, 563, 565, 566, 567, 568, 570, 572, 573, 574, 575, 576, 580, 581, 582, 583,
        589,
        590, 591, 595, 598, 599, 600, 601, 602, 603, 606, 610, 611, 618, 619, 622, 625, 626, 628, 631, 639, 644, 645, 646,
        647,
        648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 663, 666, 667, 668, 669, 672, 674, 683, 688, 689, 690, 691, 693,
        694,
        695, 696, 697, 704, 713, 714, 715, 717, 718, 719, 720, 723, 727, 729, 730, 732, 733, 734, 736, 738, 740, 742, 744,
        745,
        746, 751, 754, 755, 756, 757, 758, 761, 762, 769, 772, 774, 782, 783, 784, 788, 793, 796, 806, 807, 808, 811, 813,
        814,
        817, 818, 819, 824, 827, 828, 832, 835, 842, 843, 845, 857, 863, 875, 879, 880, 881, 882, 883, 884, 885, 888, 889,
        894,
        898, 908, 909, 910, 911, 913, 914, 915, 920, 923, 925, 926, 941, 942, 946, 949, 950, 951, 954, 955, 956, 957, 970,
        974,
        975, 977, 978, 979, 980, 981, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1002, 1003,
        1004, 1005, 1006, 1007, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1023, 1024, 1027, 1028, 1029, 1030,
        1041,
        1044, 1045, 1049, 1052, 1054, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1070, 1071, 1074, 1077, 1079, 1080, 1084,
        1085,
        1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1110, 1114, 1116, 1117, 1122,
        1126,
        1127, 1130, 1140, 1141, 1142, 1143, 1144, 1150, 1151, 1153, 1154, 1155, 1157, 1158, 1160)

    for i in ('Trackable', 'Identifiable'):
        file_path = '/Volumes/LaCie/LaCie/LaCie Rugged USB-C/Recreation/' + i + '/InScope'
        files = glob.glob(file_path + '/*.gpx', recursive=False)
        count = 0
        for file in files:
            if count in tracks[i]:
                shutil.copy2(file, '/Volumes/LaCie/LaCie/LaCie Rugged USB-C/Recreation/' + i + '/Used')
            count += 1

def breaktest():
    from gps_reader_pkg.break_finder import BreakFinder
    from gps_reader_pkg.qgis_app_init import QgisSetup

    qgsdict = dict()
    qgsdict['qgis_path'] = '/Users/Andrew/miniconda3/envs/pkg_test/QGIS.app/Contents/MacOS'
    qgs = QgisSetup().setup(qgsdict)
    if not qgs:
        return False

    BreakFinder().find_breaks('/Volumes/LaCie/LaCie/LaCie Rugged USB-C/PackageDemo/Hikr Out/Hikr0_001.gpkg')
    qgs.exit()

if __name__ == "__main__":
    #valid()
    breaktest()